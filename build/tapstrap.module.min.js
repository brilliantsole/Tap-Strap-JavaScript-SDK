/**
 * @copyright Zack Qattan 2024
 * @license MIT
 */
function e(e,t,i,n){if("a"===i&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===i?n:"a"===i?n.call(e):n?n.value:t.get(e)}function t(e,t,i,n,s){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!s)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?s.call(e,i):s?s.value=i:t.set(e,i),i}"function"==typeof SuppressedError&&SuppressedError;const i=!1,n="undefined"!=typeof window&&void 0!==window?.document,s="undefined"!=typeof process&&null!=process?.versions?.node,r=n&&navigator.userAgent||"";let o=!1;n?o=Boolean(navigator.bluetooth):s&&(o=!0);const a=n&&/Bluefy/i.test(r),c=n&&/WebBLE/i.test(r),h=n&&/Android/i.test(r),l=n&&/Safari/i.test(r)&&!/Chrome/i.test(r),d=n&&/iPad|iPhone|iPod/i.test(r),u=n&&/Macintosh/i.test(r),f=!n&&!s&&"undefined"!=typeof global&&"undefined"!=typeof Studio;var g,v,m,p,w=Object.freeze({__proto__:null,isAndroid:h,get isBluetoothSupported(){return o},isIOS:d,isInBluefy:a,isInBrowser:n,isInDev:i,isInLensStudio:f,isInNode:s,isInProduction:!0,isInWebBLE:c,isMac:u,isSafari:l});if(f){const e=function(...e){Studio.log(e.map((e=>new String(e))).join(","))};(p={}).log=e,p.warn=e.bind(p,"WARNING"),p.error=e.bind(p,"ERROR")}else p=console;if(!p.assert){const e=(e,...t)=>{e||p.warn(...t)};p.assert=e}if(!p.table){const e=(...e)=>{p.log(...e)};p.table=e}function b(){}const y=p.log.bind(p),E=p.warn.bind(p),M=p.error.bind(p),C=p.table.bind(p),D=p.assert.bind(p);class W{constructor(t){if(m.set(this,{log:i,warn:i,assert:!0,error:!0,table:!0}),e(g,g,"f",v)[t])throw new Error(`"${t}" console already exists`);e(g,g,"f",v)[t]=this}setLevelFlags(t){Object.assign(e(this,m,"f"),t)}static setLevelFlagsForType(t,i){if(!e(this,g,"f",v)[t])throw new Error(`no console found with type "${t}"`);e(this,g,"f",v)[t].setLevelFlags(i)}static setAllLevelFlags(t){for(const i in e(this,g,"f",v))e(this,g,"f",v)[i].setLevelFlags(t)}static create(t,i){return e(this,g,"f",v)[t]||new g(t)}get log(){return e(this,m,"f").log?y:b}get warn(){return e(this,m,"f").warn?E:b}get error(){return e(this,m,"f").error?M:b}get assert(){return e(this,m,"f").assert?D:b}get table(){return e(this,m,"f").table?C:b}assertWithError(e,t){if(!Boolean(e))throw new Error(t)}assertTypeWithError(e,t){this.assertWithError(typeof e==t,`value ${e} of type "${typeof e}" not of type "${t}"`)}assertEnumWithError(e,t){this.assertWithError(t.includes(e),`invalid enum "${e}"`)}}function L(e,t){return W.create(e,t)}function S(e,t){W.setLevelFlagsForType(e,t)}function R(e){W.setAllLevelFlags(e)}g=W,m=new WeakMap,v={value:{}};const I=L("EventDispatcher",{log:!1});class k{constructor(e,t){this.target=e,this.validEventTypes=t,this.listeners={},this.addEventListener=this.addEventListener.bind(this),this.removeEventListener=this.removeEventListener.bind(this),this.removeEventListeners=this.removeEventListeners.bind(this),this.removeAllEventListeners=this.removeAllEventListeners.bind(this),this.dispatchEvent=this.dispatchEvent.bind(this),this.waitForEvent=this.waitForEvent.bind(this)}isValidEventType(e){return this.validEventTypes.includes(e)}updateEventListeners(e){this.listeners[e]&&(this.listeners[e]=this.listeners[e].filter((t=>(t.shouldRemove&&I.log(`removing "${e}" eventListener`,t),!t.shouldRemove))))}addEventListener(e,t,i={once:!1}){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]||(this.listeners[e]=[],I.log(`creating "${e}" listeners array`,this.listeners[e]));this.listeners[e].find((e=>e.listener==t&&e.once==i.once))?I.log("already added listener"):(I.log(`adding "${e}" listener`,t,i),this.listeners[e].push({listener:t,once:i.once}),I.log(`currently have ${this.listeners[e].length} "${e}" listeners`))}removeEventListener(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(I.log(`removing "${e}" listener...`,t),this.listeners[e].forEach((i=>{i.listener===t&&(I.log(`flagging "${e}" listener`,t),i.shouldRemove=!0)})),this.updateEventListeners(e))}removeEventListeners(e){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(I.log(`removing "${e}" listeners...`),this.listeners[e]=[])}removeAllEventListeners(){I.log("removing listeners..."),this.listeners={}}dispatchEvent(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(this.listeners[e].forEach((i=>{i.shouldRemove||(I.log(`dispatching "${e}" listener`,i),i.listener({type:e,target:this.target,message:t}),i.once&&(I.log(`flagging "${e}" listener`,i),i.shouldRemove=!0))})),this.updateEventListeners(e))}waitForEvent(e){return new Promise((t=>{this.addEventListener(e,(e=>{t(e)}),{once:!0})}))}}var x,A,T;const $=L("Timer",{log:!1});class O{get callback(){return e(this,x,"f")}set callback(e){$.assertTypeWithError(e,"function"),$.log({newCallback:e}),t(this,x,e,"f"),this.isRunning&&this.restart()}get interval(){return e(this,A,"f")}set interval(e){$.assertTypeWithError(e,"number"),$.assertWithError(e>0,"interval must be above 0"),$.log({newInterval:e}),t(this,A,e,"f"),this.isRunning&&this.restart()}constructor(e,t){x.set(this,void 0),A.set(this,void 0),T.set(this,void 0),this.interval=t,this.callback=e}get isRunning(){return null!=e(this,T,"f")}start(){this.isRunning?$.log("interval already running"):($.log("starting interval"),t(this,T,setInterval(e(this,x,"f"),e(this,A,"f")),"f"))}stop(){this.isRunning?($.log("stopping interval"),clearInterval(e(this,T,"f")),t(this,T,void 0,"f")):$.log("interval already not running")}restart(){this.stop(),this.start()}}var B,U;x=new WeakMap,A=new WeakMap,T=new WeakMap,B="undefined"==typeof TextEncoder?class{encode(e){const t=Array.from(e).map((e=>e.charCodeAt(0)));return Uint8Array.from(t)}}:TextEncoder,U="undefined"==typeof TextDecoder?class{decode(e){return Array.from(new Uint8Array(e)).map((e=>String.fromCharCode(e))).join("")}}:TextDecoder;const V=new B,N=new U,j=L("ArrayBufferUtils",{log:!1});function _(...e){const t=(e=(e=(e=e.filter((e=>null!=e||null!=e))).map((e=>{if("number"==typeof e){const t=e;return Uint8Array.from([Math.floor(t)])}if("boolean"==typeof e){const t=e;return Uint8Array.from([t?1:0])}if("string"==typeof e){return F(e)}if(e instanceof Array){return _(...e)}if(e instanceof ArrayBuffer)return e;if("buffer"in e&&e.buffer instanceof ArrayBuffer){return e.buffer}if(e instanceof DataView){return e.buffer}if("object"==typeof e){return function(e){return F(JSON.stringify(e))}(e)}return e}))).filter((e=>e&&"byteLength"in e))).reduce(((e,t)=>e+t.byteLength),0),i=new Uint8Array(t);let n=0;return e.forEach((e=>{i.set(new Uint8Array(e),n),n+=e.byteLength})),i.buffer}function F(e){const t=V.encode(e);return _(t.byteLength,t)}function P(e,t,i){let n;return null!=i&&(n=e.byteOffset+t+i),j.log({dataView:e,begin:t,end:n,length:i}),new DataView(e.buffer.slice(e.byteOffset+t,n))}const G=L("ParseUtils",{log:!0});var z,J,q,K,H;const Q=L("DeviceInformationManager",{log:!0}),X=["manufacturerName","modelNumber","softwareRevision","hardwareRevision","firmwareRevision","pnpId","serialNumber"],Y=[...X,"deviceInformation"];class Z{constructor(){z.add(this),q.set(this,{})}get information(){return e(this,q,"f")}clear(){t(this,q,{},"f")}parseMessage(t,i){switch(Q.log({messageType:t}),t){case"manufacturerName":const n=N.decode(i.buffer);Q.log({manufacturerName:n}),e(this,z,"m",H).call(this,{manufacturerName:n});break;case"modelNumber":const s=N.decode(i.buffer);Q.log({modelNumber:s}),e(this,z,"m",H).call(this,{modelNumber:s});break;case"softwareRevision":const r=N.decode(i.buffer);Q.log({softwareRevision:r}),e(this,z,"m",H).call(this,{softwareRevision:r});break;case"hardwareRevision":const o=N.decode(i.buffer);Q.log({hardwareRevision:o}),e(this,z,"m",H).call(this,{hardwareRevision:o});break;case"firmwareRevision":const a=N.decode(i.buffer);Q.log({firmwareRevision:a}),e(this,z,"m",H).call(this,{firmwareRevision:a});break;case"pnpId":const c={source:1===i.getUint8(0)?"Bluetooth":"USB",productId:i.getUint16(3,!0),productVersion:i.getUint16(5,!0),vendorId:0};"Bluetooth"==c.source&&(c.vendorId=i.getUint16(1,!0)),Q.log({pnpId:c}),e(this,z,"m",H).call(this,{pnpId:c});break;case"serialNumber":const h=N.decode(i.buffer);Q.log({serialNumber:h});break;default:throw Error(`uncaught messageType ${t}`)}}}q=new WeakMap,z=new WeakSet,J=function(){return this.eventDispatcher.dispatchEvent},K=function(){return X.every((t=>t in e(this,q,"f")))},H=function(t){Q.log({partialDeviceInformation:t});Object.keys(t).forEach((i=>{e(this,z,"a",J).call(this,i,{[i]:t[i]})})),Object.assign(e(this,q,"f"),t),Q.log({deviceInformation:e(this,q,"f")}),e(this,z,"a",K)&&(Q.log("completed deviceInformation"),e(this,z,"a",J).call(this,"deviceInformation",{deviceInformation:this.information}))};function ee(e,{include:t,exclude:i}={}){const n=e=>{const n=t=>"string"==typeof t?e===t:t.test(e);return t?t.some(n):!i||!i.some(n)};for(const[t,i]of(e=>{const t=new Set;do{for(const i of Reflect.ownKeys(e))t.add([e,i])}while((e=Reflect.getPrototypeOf(e))&&e!==Object.prototype);return t})(e.constructor.prototype)){if("constructor"===i||!n(i))continue;const s=Reflect.getOwnPropertyDescriptor(t,i);s&&"function"==typeof s.value&&(e[i]=e[i].bind(e))}return e}L("VibrationManager");const te=9;class ie{constructor(){ee(this)}async triggerVibration(e){}}var ne,se,re,oe,ae,ce,he,le,de,ue,fe,ge,ve,me,pe;const we=L("BaseConnectionManager",{log:!0}),be=["notConnected","connecting","connected","disconnecting"],ye=[...be,"connectionStatus","isConnected"],Ee=["triggerVibration"],Me=["batteryLevel"],Ce=["rx","tx"];class De{get baseConstructor(){return this.constructor}static get isSupported(){return!1}get isSupported(){return this.baseConstructor.isSupported}get type(){return this.baseConstructor.type}constructor(){ne.add(this),ae.set(this,"notConnected"),fe.set(this,[]),ge.set(this,!1),me.set(this,new O(e(this,ne,"m",pe).bind(this),5e3)),e(this,ne,"m",oe).call(this)}get status(){return e(this,ae,"f")}set status(i){we.assertEnumWithError(i,be),e(this,ae,"f")!=i?(we.log(`new connection status "${i}"`),t(this,ae,i,"f"),this.onStatusUpdated(this.status),this.isConnected?e(this,me,"f").start():e(this,me,"f").stop(),"notConnected"==e(this,ae,"f")&&(this.mtu=void 0)):we.log(`tried to assign same connection status "${i}"`)}get isConnected(){return"connected"==this.status}async connect(){e(this,ne,"m",ce).call(this),e(this,ne,"m",he).call(this),this.status="connecting"}get canReconnect(){return!1}async reconnect(){e(this,ne,"m",ce).call(this),e(this,ne,"m",he).call(this),we.assert(this.canReconnect,"unable to reconnect")}async disconnect(){e(this,ne,"m",le).call(this),e(this,ne,"m",de).call(this),this.status="disconnecting",we.log("disconnecting from device...")}async sendSmpMessage(t){e(this,ne,"m",ue).call(this),we.log("sending smp message",t)}async sendTxMessages(i,n=!0){if(e(this,ne,"m",ue).call(this),i&&e(this,fe,"f").push(...i),!n)return;if(e(this,ge,"f"))return;t(this,ge,!0,"f"),we.log("sendTxMessages",e(this,fe,"f").slice());const s=e(this,fe,"f").map((t=>{e(se,se,"m",re).call(se,t.type);const i=Ee.indexOf(t.type),n=new DataView(new ArrayBuffer(2));return n.setUint16(0,t.data?.byteLength||0,!0),_(i,n,t.data)}));if(this.mtu)for(;s.length>0;){let e=0,t=0;s.some((i=>{if(e+i.byteLength>this.mtu-3)return!0;t++,e+=i.byteLength}));const i=s.splice(0,t);we.log({arrayBufferCount:t,arrayBuffersToSend:i});const n=_(...i);we.log("sending arrayBuffer",n),await this.sendTxData(n)}else{const e=_(...s);we.log("sending arrayBuffer",e),await this.sendTxData(e)}e(this,fe,"f").length=0,t(this,ge,!1,"f")}async sendTxData(e){we.log("sendTxData",e)}parseRxMessage(t){!function(e,t,i,n,s=!1){let r=0;for(;r<e.byteLength;){const o=e.getUint8(r++);G.assertWithError(o in t,`invalid messageTypeEnum ${o}`);const a=t[o];let c;s?(c=e.getUint16(r,!0),r+=2):c=e.getUint8(r++),G.log({messageTypeEnum:o,messageType:a,messageLength:c,dataView:e,byteOffset:r});const h=P(e,r,c);G.log({_dataView:h}),i(a,h,n),r+=c}}(t,Ee,e(this,ne,"m",ve).bind(this),null,!0),this.onMessagesReceived()}}se=De,ae=new WeakMap,fe=new WeakMap,ge=new WeakMap,me=new WeakMap,ne=new WeakSet,re=function(e){we.assertEnumWithError(e,Ee)},oe=function(){we.assertWithError(this.isSupported,`${this.constructor.name} is not supported`)},ce=function(){we.assertWithError(!this.isConnected,"device is already connected")},he=function(){we.assertWithError("connecting"!=this.status,"device is already connecting")},le=function(){we.assertWithError(this.isConnected,"device is not connected")},de=function(){we.assertWithError("disconnecting"!=this.status,"device is already disconnecting")},ue=function(){e(this,ne,"m",le).call(this),e(this,ne,"m",de).call(this)},ve=function(e,t){we.log({messageType:e,dataView:t}),this.onMessageReceived(e,t)},pe=function(){this.isConnected||(we.log("timer detected disconnection"),this.status="notConnected")};const We=L("EventUtils",{log:!1});function Le(e,t){let i=e.addEventListener||e.addListener||e.on||e.AddEventListener;We.assertWithError(i,"no add listener function found for target"),i=i.bind(e),Object.entries(t).forEach((([e,t])=>{i(e,t)}))}function Se(e,t){let i=e.removeEventListener||e.removeListener||e.RemoveEventListener;We.assertWithError(i,"no remove listener function found for target"),i=i.bind(e),Object.entries(t).forEach((([e,t])=>{i(e,t)}))}const Re=L("bluetoothUUIDs",{log:!1});if(n)var Ie=window.BluetoothUUID;function ke(e){return Re.assertTypeWithError(e,"string"),Re.assertWithError(4==e.length,"value must be 4 characters long"),`ea6da725-${e}-4f9b-893d-c3913e33b39f`}function xe(e){return Ie?.getCharacteristic?.(e)}function Ae(e){return Ie?.getService?.(e)}const Te=Object.freeze({services:{deviceInformation:{uuid:Ae("device_information"),characteristics:{manufacturerName:{uuid:xe("manufacturer_name_string")},modelNumber:{uuid:xe("model_number_string")},hardwareRevision:{uuid:xe("hardware_revision_string")},firmwareRevision:{uuid:xe("firmware_revision_string")},softwareRevision:{uuid:xe("software_revision_string")},pnpId:{uuid:xe("pnp_id")},serialNumber:{uuid:xe("serial_number_string")}}},battery:{uuid:Ae("battery_service"),characteristics:{batteryLevel:{uuid:xe("battery_level")}}},main:{uuid:ke("0000"),characteristics:{rx:{uuid:ke("1000")},tx:{uuid:ke("1001")}}},smp:{uuid:"8d53dc1d-1db7-4cd3-868b-8a527460aa84",characteristics:{smp:{uuid:"da2e7828-fbce-4e01-ae9e-261174997c48"}}}}}),$e=[Te.services.main.uuid],Oe=[Te.services.deviceInformation.uuid,Te.services.battery.uuid,Te.services.smp.uuid];function Be(e){e=e.toString().toLowerCase();return Object.keys(Te.services).find((t=>{let i=Te.services[t].uuid.toString();return 4==e.length&&(i=i.slice(4,8)),e.includes("-")||(i=i.replaceAll("-","")),e==i}))}const Ue=[],Ve=[];function Ne(e){var t;return e=e.toString().toLowerCase(),Object.values(Te.services).some((i=>{const n=Object.keys(i.characteristics);return t=n.find((t=>{let n=i.characteristics[t].uuid.toString();return 4==e.length&&(n=n.slice(4,8)),e.includes("-")||(n=n.replaceAll("-","")),e==n}))})),t}function je(e){const t={broadcast:!1,read:!0,writeWithoutResponse:!1,write:!1,notify:!1,indicate:!1,authenticatedSignedWrites:!1,reliableWrite:!1,writableAuxiliaries:!1};switch(e){case"rx":case"tx":case"smp":t.read=!1}switch(e){case"batteryLevel":case"rx":case"smp":t.notify=!0}if("smp"===e)t.writeWithoutResponse=!0;if("tx"===e)t.write=!0;return t}Object.values(Te.services).forEach((e=>{if(!e.characteristics)return;const t=Object.keys(e.characteristics);t.forEach((i=>{const n=e.characteristics[i];$e.includes(e.uuid)&&(Ue.push(n.uuid),t.push(i)),Ve.push(n.uuid)}))}),[]);const _e=L("BluetoothConnectionManager",{log:!0});class Fe extends De{constructor(){super(...arguments),this.isInRange=!0}onCharacteristicValueChanged(e,t){"rx"==e?this.parseRxMessage(t):this.onMessageReceived?.(e,t)}async writeCharacteristic(e,t){_e.log("writeCharacteristic",...arguments)}async sendSmpMessage(e){super.sendSmpMessage(e),await this.writeCharacteristic("smp",e)}async sendTxData(e){super.sendTxData(e),await this.writeCharacteristic("tx",e)}}var Pe,Ge,ze,Je,qe,Ke,He,Qe,Xe,Ye,Ze;const et=L("WebBluetoothConnectionManager",{log:!0});var tt,it,nt,st,rt,ot,at,ct,ht,lt,dt,ut,ft,gt,vt,mt,pt;n&&(tt=window.navigator.bluetooth);class wt extends Fe{constructor(){super(...arguments),Pe.add(this),Ge.set(this,{characteristicvaluechanged:e(this,Pe,"m",Xe).bind(this)}),ze.set(this,{gattserverdisconnected:e(this,Pe,"m",Ze).bind(this)}),Je.set(this,void 0),qe.set(this,new Map),Ke.set(this,new Map)}get bluetoothId(){return this.device.id}static get isSupported(){return Boolean(tt)}static get type(){return"webBluetooth"}get device(){return e(this,Je,"f")}set device(i){e(this,Je,"f")!=i?(e(this,Je,"f")&&Se(e(this,Je,"f"),e(this,ze,"f")),i&&Le(i,e(this,ze,"f")),t(this,Je,i,"f")):et.log("tried to assign the same BluetoothDevice")}get server(){return e(this,Je,"f")?.gatt}get isConnected(){return this.server?.connected||!1}async connect(){await super.connect();try{const t=await tt.requestDevice({filters:[{services:$e}],optionalServices:n?Oe:[]});et.log("got BluetoothDevice"),this.device=t,et.log("connecting to device...");const i=await this.server.connect();et.log(`connected to device? ${i.connected}`),await e(this,Pe,"m",He).call(this),et.log("fully connected"),this.status="connected"}catch(t){et.error(t),this.status="notConnected",this.server?.disconnect(),e(this,Pe,"m",Qe).call(this)}}async disconnect(){await e(this,Pe,"m",Qe).call(this),await super.disconnect(),this.server?.disconnect(),this.status="notConnected"}async writeCharacteristic(t,i){super.writeCharacteristic(t,i);const n=e(this,Ke,"f").get(t);et.assertWithError(n,`${t} characteristic not found`),et.log("writing characteristic",n,i);const s=n.properties||je(t);s.writeWithoutResponse?(et.log("writing without response"),await n.writeValueWithoutResponse(i)):(et.log("writing with response"),await n.writeValueWithResponse(i)),et.log("wrote characteristic"),s.read&&!s.notify&&(et.log("reading value after write..."),await n.readValue(),(a||c)&&e(this,Pe,"m",Ye).call(this,n))}get canReconnect(){return Boolean(this.server&&!this.server.connected&&this.isInRange)}async reconnect(){await super.reconnect(),et.log("attempting to reconnect..."),this.status="connecting";try{await this.server.connect()}catch(e){et.error(e),this.isInRange=!1}this.isConnected?(et.log("successfully reconnected!"),await e(this,Pe,"m",He).call(this),this.status="connected"):(et.log("unable to reconnect"),this.status="notConnected")}}Ge=new WeakMap,ze=new WeakMap,Je=new WeakMap,qe=new WeakMap,Ke=new WeakMap,Pe=new WeakSet,He=async function(){e(this,Pe,"m",Qe).call(this),et.log("getting services...");const t=await this.server.getPrimaryServices();et.log("got services",t.length),et.log("getting characteristics...");for(const i in t){const n=t[i];et.log({service:n});const s=Be(n.uuid);et.assertWithError(s,`no name found for service uuid "${n.uuid}"`),et.log(`got "${s}" service`),n.name=s,e(this,qe,"f").set(s,n),et.log(`getting characteristics for "${s}" service`);const r=await n.getCharacteristics();et.log(`got characteristics for "${s}" service`);for(const t in r){const i=r[t];et.log({characteristic:i});const n=Ne(i.uuid);et.assertWithError(Boolean(n),`no name found for characteristic uuid "${i.uuid}" in "${s}" service`),et.log(`got "${n}" characteristic in "${s}" service`),i.name=n,e(this,Ke,"f").set(n,i),Le(i,e(this,Ge,"f"));const o=i.properties||je(n);o.notify&&(et.log(`starting notifications for "${n}" characteristic`),await i.startNotifications()),o.read&&(et.log(`reading "${n}" characteristic...`),await i.readValue(),(a||c)&&e(this,Pe,"m",Ye).call(this,i))}}},Qe=async function(){this.device&&Se(this.device,e(this,ze,"f"));const t=Array.from(e(this,Ke,"f").keys()).map((t=>{const i=e(this,Ke,"f").get(t);Se(i,e(this,Ge,"f"));if((i.properties||je(t)).notify)return et.log(`stopping notifications for "${t}" characteristic`),i.stopNotifications()}));return Promise.allSettled(t)},Xe=function(t){et.log("oncharacteristicvaluechanged");const i=t.target;e(this,Pe,"m",Ye).call(this,i)},Ye=function(e){et.log("onCharacteristicValue");const t=e.name;et.assertWithError(Boolean(t),`no name found for characteristic with uuid "${e.uuid}"`),et.log(`oncharacteristicvaluechanged for "${t}" characteristic`);const i=e.value;et.assertWithError(i,`no data found for "${t}" characteristic`),et.log(`data for "${t}" characteristic`,Array.from(new Uint8Array(i.buffer)));try{this.onCharacteristicValueChanged(t,i)}catch(e){et.error(e)}},Ze=function(){et.log("gattserverdisconnected"),this.status="notConnected"};const bt=L("DeviceManager",{log:!0}),yt=["deviceConnected","deviceDisconnected","deviceIsConnected","availableDevices","connectedDevices"];class Et{constructor(){if(it.add(this),nt.set(this,{isConnected:e(this,it,"m",vt).bind(this)}),st.set(this,[]),rt.set(this,!1),ot.set(this,{devices:[]}),at.set(this,void 0),ht.set(this,"TS.Device"),ut.set(this,[]),ft.set(this,new k(this,yt)),Et.shared&&this!=Et.shared)throw Error("DeviceManager is a singleton - use DeviceManager.shared");this.CanUseLocalStorage&&(this.UseLocalStorage=!0)}onDevice(t){Le(t,e(this,nt,"f"))}OnDeviceConnectionStatusUpdated(t,i){if("notConnected"==i&&!t.canReconnect&&e(this,ut,"f").includes(t)){const i=e(this,ut,"f").indexOf(t);this.AvailableDevices.splice(i,1),e(this,it,"m",mt).call(this)}}get ConnectedDevices(){return e(this,st,"f")}get UseLocalStorage(){return e(this,rt,"f")}set UseLocalStorage(i){e(this,it,"m",ct).call(this),bt.assertTypeWithError(i,"boolean"),t(this,rt,i,"f"),e(this,rt,"f")&&!e(this,at,"f")&&e(this,it,"m",dt).call(this)}get CanUseLocalStorage(){return n&&window.localStorage}get AvailableDevices(){return e(this,ut,"f")}get CanGetDevices(){return n&&navigator.bluetooth?.getDevices}async GetDevices(){if(!n)return void bt.warn("GetDevices is only available in the browser");if(!navigator.bluetooth)return void bt.warn("bluetooth is not available in this browser");if(a)return void bt.warn("bluefy lists too many devices...");if(!navigator.bluetooth.getDevices)return void bt.warn("bluetooth.getDevices() is not available in this browser");if(!this.CanGetDevices)return void bt.log("CanGetDevices is false");e(this,at,"f")||e(this,it,"m",dt).call(this);const t=e(this,at,"f");if(!t.devices||0==t.devices.length)return void bt.log("no devices found in configuration");const i=await navigator.bluetooth.getDevices();return bt.log({bluetoothDevices:i}),i.forEach((i=>{if(!i.gatt)return;if(!t.devices.find((e=>i.id==e.bluetoothId)))return;let n=this.ConnectedDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==i.id));const s=this.AvailableDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==i.id));if(s)return void(n&&n?.bluetoothId==s.bluetoothId&&n!=s&&(this.AvailableDevices[e(this,ut,"f").indexOf(s)]=n));if(n)return void this.AvailableDevices.push(n);const r=new Ht,o=new wt;o.device=i,i.name,r.connectionManager=o,this.AvailableDevices.push(r)})),e(this,it,"m",mt).call(this),this.AvailableDevices}get AddEventListener(){return e(this,ft,"f").addEventListener}get RemoveEventListener(){return e(this,ft,"f").removeEventListener}get RemoveEventListeners(){return e(this,ft,"f").removeEventListeners}get RemoveAllEventListeners(){return e(this,ft,"f").removeAllEventListeners}}nt=new WeakMap,st=new WeakMap,rt=new WeakMap,ot=new WeakMap,at=new WeakMap,ht=new WeakMap,ut=new WeakMap,ft=new WeakMap,it=new WeakSet,ct=function(){bt.assertWithError(n,"localStorage is only available in the browser"),bt.assertWithError(window.localStorage,"localStorage not found")},lt=function(){e(this,it,"m",ct).call(this),localStorage.setItem(e(this,ht,"f"),JSON.stringify(e(this,at,"f")))},dt=async function(){e(this,it,"m",ct).call(this);let i=localStorage.getItem(e(this,ht,"f"));if("string"!=typeof i)return bt.log("no info found in localStorage"),t(this,at,Object.assign({},e(this,ot,"f")),"f"),void e(this,it,"m",lt).call(this);try{const e=JSON.parse(i);bt.log({configuration:e}),t(this,at,e,"f"),this.CanGetDevices&&await this.GetDevices()}catch(e){bt.error(e)}},gt=function(){return e(this,ft,"f").dispatchEvent},vt=function(t){const{target:i}=t;if(i.isConnected)if(e(this,st,"f").includes(i))bt.log("device already included");else{if(bt.log("adding device",i),e(this,st,"f").push(i),this.UseLocalStorage&&"webBluetooth"==i.connectionType){const t={bluetoothId:i.bluetoothId},n=e(this,at,"f").devices.findIndex((e=>e.bluetoothId==t.bluetoothId));-1==n?e(this,at,"f").devices.push(t):e(this,at,"f").devices[n]=t,e(this,it,"m",lt).call(this)}e(this,it,"a",gt).call(this,"deviceConnected",{device:i}),e(this,it,"a",gt).call(this,"deviceIsConnected",{device:i}),e(this,it,"m",pt).call(this)}else e(this,st,"f").includes(i)?(bt.log("removing device",i),e(this,st,"f").splice(e(this,st,"f").indexOf(i),1),e(this,it,"a",gt).call(this,"deviceDisconnected",{device:i}),e(this,it,"a",gt).call(this,"deviceIsConnected",{device:i}),e(this,it,"m",pt).call(this)):bt.log("device already not included");if(this.CanGetDevices&&this.GetDevices(),i.isConnected&&!this.AvailableDevices.includes(i)){const t=this.AvailableDevices.find((e=>e.bluetoothId==i.bluetoothId));bt.log({existingAvailableDevice:t}),t?this.AvailableDevices[this.AvailableDevices.indexOf(t)]=i:this.AvailableDevices.push(i),e(this,it,"m",mt).call(this)}},mt=function(){bt.log({AvailableDevices:this.AvailableDevices}),e(this,it,"a",gt).call(this,"availableDevices",{availableDevices:this.AvailableDevices})},pt=function(){bt.log({ConnectedDevices:this.ConnectedDevices}),e(this,it,"a",gt).call(this,"connectedDevices",{connectedDevices:this.ConnectedDevices})},Et.shared=new Et;var Mt,Ct,Dt,Wt,Lt,St,Rt,It,kt,xt,At,Tt,$t,Ot,Bt,Ut,Vt,Nt,jt,_t,Ft,Pt,Gt,zt,Jt=Et.shared;const qt=L("Device",{log:!0}),Kt=["connectionMessage",...ye,...Ce,...Me,...Y];class Ht{get bluetoothId(){return e(this,St,"f")?.bluetoothId}constructor(){Mt.add(this),Wt.set(this,new k(this,Kt)),St.set(this,void 0),this.sendTxMessages=e(this,Mt,"m",Rt).bind(this),It.set(this,!1),Tt.set(this,Ct.ReconnectOnDisconnection),$t.set(this,void 0),this.latestConnectionMessage=new Map,_t.set(this,new Z),Ft.set(this,0),Gt.set(this,new ie),zt.set(this,!1),e(this,_t,"f").eventDispatcher=e(this,Wt,"f"),e(this,Gt,"f").sendMessage=this.sendTxMessages,Jt.onDevice(this),n&&window.addEventListener("beforeunload",(()=>{this.isConnected})),s&&process.on("exit",(()=>{this.isConnected}))}get addEventListener(){return e(this,Wt,"f").addEventListener}get removeEventListener(){return e(this,Wt,"f").removeEventListener}get waitForEvent(){return e(this,Wt,"f").waitForEvent}get removeEventListeners(){return e(this,Wt,"f").removeEventListeners}get removeAllEventListeners(){return e(this,Wt,"f").removeAllEventListeners}get connectionManager(){return e(this,St,"f")}set connectionManager(i){this.connectionManager!=i?(this.connectionManager&&(this.connectionManager.onStatusUpdated=void 0,this.connectionManager.onMessageReceived=void 0,this.connectionManager.onMessagesReceived=void 0),i&&(i.onStatusUpdated=e(this,Mt,"m",Ot).bind(this),i.onMessageReceived=e(this,Mt,"m",Nt).bind(this),i.onMessagesReceived=e(this,Mt,"m",jt).bind(this)),t(this,St,i,"f"),qt.log("assigned new connectionManager",e(this,St,"f"))):qt.log("same connectionManager is already assigned")}async connect(){return this.connectionManager||(this.connectionManager=e(Ct,Ct,"m",Dt).call(Ct)),e(this,Mt,"m",Vt).call(this),this.connectionManager.connect()}get isConnected(){return e(this,It,"f")}get canReconnect(){return this.connectionManager?.canReconnect}async reconnect(){return e(this,Mt,"m",xt).call(this),e(this,Mt,"m",Vt).call(this),this.connectionManager?.reconnect()}static async Connect(){const e=new Ct;return await e.connect(),e}static get ReconnectOnDisconnection(){return e(this,Ct,"f",At)}static set ReconnectOnDisconnection(e){qt.assertTypeWithError(e,"boolean"),t(this,Ct,e,"f",At)}get reconnectOnDisconnection(){return e(this,Tt,"f")}set reconnectOnDisconnection(e){qt.assertTypeWithError(e,"boolean"),t(this,Tt,e,"f")}get connectionType(){return this.connectionManager?.type}async disconnect(){return e(this,Mt,"m",kt).call(this),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.addEventListener("isConnected",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this.connectionManager.disconnect()}toggleConnection(){this.isConnected?this.disconnect():this.canReconnect?this.reconnect():this.connect()}get connectionStatus(){switch(e(this,St,"f")?.status){case"connected":return this.isConnected?"connected":"connecting";case"notConnected":case"connecting":case"disconnecting":return e(this,St,"f").status;default:return"notConnected"}}get isConnectionBusy(){return"connecting"==this.connectionStatus||"disconnecting"==this.connectionStatus}get deviceInformation(){return e(this,_t,"f").information}get batteryLevel(){return e(this,Ft,"f")}async triggerVibration(t){e(this,Gt,"f").triggerVibration(t)}get isServerSide(){return e(this,zt,"f")}set isServerSide(i){e(this,zt,"f")!=i?(qt.log({newIsServerSide:i}),t(this,zt,i,"f")):qt.log("redundant isServerSide assignment")}}var Qt,Xt,Yt;Ct=Ht,Wt=new WeakMap,St=new WeakMap,It=new WeakMap,Tt=new WeakMap,$t=new WeakMap,_t=new WeakMap,Ft=new WeakMap,Gt=new WeakMap,zt=new WeakMap,Mt=new WeakSet,Dt=function(){return new wt},Lt=function(){return e(this,Wt,"f").dispatchEvent},Rt=async function(t,i){await(e(this,St,"f")?.sendTxMessages(t,i))},kt=function(){qt.assertWithError(this.isConnected,"notConnected")},xt=function(){qt.assertWithError(this.canReconnect,"cannot reconnect to device")},Ot=function(i){qt.log({connectionStatus:i}),"notConnected"==i?this.canReconnect&&this.reconnectOnDisconnection&&(qt.log("starting reconnect interval..."),t(this,$t,setInterval((()=>{qt.log("attempting reconnect..."),this.reconnect()}),1e3),"f")):null!=e(this,$t,"f")&&(qt.log("clearing reconnect interval"),clearInterval(e(this,$t,"f")),t(this,$t,void 0,"f")),e(this,Mt,"m",Ut).call(this),"connected"==i&&e(this,It,"f"),Jt.OnDeviceConnectionStatusUpdated(this,i)},Bt=function(t=!1){e(this,Mt,"a",Lt).call(this,"connectionStatus",{connectionStatus:this.connectionStatus}),e(this,Mt,"a",Lt).call(this,this.connectionStatus,{}),t&&e(this,Mt,"a",Lt).call(this,"isConnected",{isConnected:this.isConnected})},Ut=function(){switch(t(this,It,Boolean(this.connectionManager?.isConnected),"f"),this.connectionStatus){case"connected":e(this,It,"f")&&e(this,Mt,"m",Bt).call(this,!0);break;case"notConnected":e(this,Mt,"m",Bt).call(this,!0);break;default:e(this,Mt,"m",Bt).call(this,!1)}},Vt=function(){this.latestConnectionMessage.clear(),e(this,_t,"f").clear()},Nt=function(t,i){if(qt.log({messageType:t,dataView:i}),"batteryLevel"===t){const t=i.getUint8(0);qt.log("received battery level",{batteryLevel:t}),e(this,Mt,"m",Pt).call(this,t)}this.latestConnectionMessage.set(t,i),e(this,Mt,"a",Lt).call(this,"connectionMessage",{messageType:t,dataView:i})},jt=function(){this.isConnected||e(this,Mt,"m",Ut).call(this),e(this,Mt,"m",Rt).call(this)},Pt=function(i){qt.assertTypeWithError(i,"number"),e(this,Ft,"f")!=i?(t(this,Ft,i,"f"),qt.log({updatedBatteryLevel:e(this,Ft,"f")}),e(this,Mt,"a",Lt).call(this,"batteryLevel",{batteryLevel:e(this,Ft,"f")})):qt.log(`duplicate batteryLevel assignment ${i}`)},At={value:!1},L("MathUtils",{log:!0});const Zt={min:1/0,max:-1/0,span:0};class ei{constructor(){Qt.add(this),Xt.set(this,Object.assign({},Zt))}get min(){return e(this,Xt,"f").min}get max(){return e(this,Xt,"f").max}set min(t){e(this,Xt,"f").min=t,e(this,Xt,"f").max=Math.max(t,e(this,Xt,"f").max),e(this,Qt,"m",Yt).call(this)}set max(t){e(this,Xt,"f").max=t,e(this,Xt,"f").min=Math.min(t,e(this,Xt,"f").min),e(this,Qt,"m",Yt).call(this)}reset(){Object.assign(e(this,Xt,"f"),Zt)}update(t){e(this,Xt,"f").min=Math.min(t,e(this,Xt,"f").min),e(this,Xt,"f").max=Math.max(t,e(this,Xt,"f").max),e(this,Qt,"m",Yt).call(this)}getNormalization(t,i){let n=function(e,t,i,n){return null==n&&(n=i-t),(e-t)/n}(t,e(this,Xt,"f").min,e(this,Xt,"f").max,e(this,Xt,"f").span);return i&&(n*=e(this,Xt,"f").span),n||0}updateAndGetNormalization(e,t){return this.update(e),this.getNormalization(e,t)}}Xt=new WeakMap,Qt=new WeakSet,Yt=function(){e(this,Xt,"f").span=e(this,Xt,"f").max-e(this,Xt,"f").min};export{Ht as Device,Jt as DeviceManager,w as Environment,te as MaxNumberOfVibrationSegments,ei as RangeHelper,R as setAllConsoleLevelFlags,S as setConsoleLevelFlagsForType};
//# sourceMappingURL=tapstrap.module.min.js.map
