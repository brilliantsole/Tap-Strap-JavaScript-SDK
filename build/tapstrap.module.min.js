/**
 * @copyright Zack Qattan 2024
 * @license MIT
 */
function e(e,t,s,i){if("a"===s&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?i:"a"===s?i.call(e):i?i.value:t.get(e)}function t(e,t,s,i,n){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?n.call(e,s):n?n.value=s:t.set(e,s),s}"function"==typeof SuppressedError&&SuppressedError;const s=!1,i="undefined"!=typeof window&&void 0!==window?.document,n="undefined"!=typeof process&&null!=process?.versions?.node,r=i&&navigator.userAgent||"";let a=!1;i?a=Boolean(navigator.bluetooth):n&&(a=!0);const o=i&&/Bluefy/i.test(r),c=i&&/WebBLE/i.test(r),h=i&&/Android/i.test(r),l=i&&/Safari/i.test(r)&&!/Chrome/i.test(r),u=i&&/iPad|iPhone|iPod/i.test(r),d=i&&/Macintosh/i.test(r),f=!i&&!n&&"undefined"!=typeof global&&"undefined"!=typeof Studio;var g,v,m,p,w=Object.freeze({__proto__:null,isAndroid:h,get isBluetoothSupported(){return a},isIOS:u,isInBluefy:o,isInBrowser:i,isInDev:s,isInLensStudio:f,isInNode:n,isInProduction:!0,isInWebBLE:c,isMac:d,isSafari:l});if(f){const e=function(...e){Studio.log(e.map((e=>new String(e))).join(","))};(p={}).log=e,p.warn=e.bind(p,"WARNING"),p.error=e.bind(p,"ERROR")}else p=console;if(!p.assert){const e=(e,...t)=>{e||p.warn(...t)};p.assert=e}if(!p.table){const e=(...e)=>{p.log(...e)};p.table=e}function b(){}const y=p.log.bind(p),E=p.warn.bind(p),D=p.error.bind(p),M=p.table.bind(p),C=p.assert.bind(p);class W{constructor(t){if(m.set(this,{log:s,warn:s,assert:!0,error:!0,table:!0}),e(g,g,"f",v)[t])throw new Error(`"${t}" console already exists`);e(g,g,"f",v)[t]=this}setLevelFlags(t){Object.assign(e(this,m,"f"),t)}static setLevelFlagsForType(t,s){if(!e(this,g,"f",v)[t])throw new Error(`no console found with type "${t}"`);e(this,g,"f",v)[t].setLevelFlags(s)}static setAllLevelFlags(t){for(const s in e(this,g,"f",v))e(this,g,"f",v)[s].setLevelFlags(t)}static create(t,s){return e(this,g,"f",v)[t]||new g(t)}get log(){return e(this,m,"f").log?y:b}get warn(){return e(this,m,"f").warn?E:b}get error(){return e(this,m,"f").error?D:b}get assert(){return e(this,m,"f").assert?C:b}get table(){return e(this,m,"f").table?M:b}assertWithError(e,t){if(!Boolean(e))throw new Error(t)}assertTypeWithError(e,t){this.assertWithError(typeof e==t,`value ${e} of type "${typeof e}" not of type "${t}"`)}assertEnumWithError(e,t){this.assertWithError(t.includes(e),`invalid enum "${e}"`)}}function S(e,t){return W.create(e,t)}function k(e,t){W.setLevelFlagsForType(e,t)}function R(e){W.setAllLevelFlags(e)}g=W,m=new WeakMap,v={value:{}};const L=S("EventDispatcher",{log:!1});class I{constructor(e,t){this.target=e,this.validEventTypes=t,this.listeners={},this.addEventListener=this.addEventListener.bind(this),this.removeEventListener=this.removeEventListener.bind(this),this.removeEventListeners=this.removeEventListeners.bind(this),this.removeAllEventListeners=this.removeAllEventListeners.bind(this),this.dispatchEvent=this.dispatchEvent.bind(this),this.waitForEvent=this.waitForEvent.bind(this)}isValidEventType(e){return this.validEventTypes.includes(e)}updateEventListeners(e){this.listeners[e]&&(this.listeners[e]=this.listeners[e].filter((t=>(t.shouldRemove&&L.log(`removing "${e}" eventListener`,t),!t.shouldRemove))))}addEventListener(e,t,s={once:!1}){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]||(this.listeners[e]=[],L.log(`creating "${e}" listeners array`,this.listeners[e]));this.listeners[e].find((e=>e.listener==t&&e.once==s.once))?L.log("already added listener"):(L.log(`adding "${e}" listener`,t,s),this.listeners[e].push({listener:t,once:s.once}),L.log(`currently have ${this.listeners[e].length} "${e}" listeners`))}removeEventListener(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(L.log(`removing "${e}" listener...`,t),this.listeners[e].forEach((s=>{s.listener===t&&(L.log(`flagging "${e}" listener`,t),s.shouldRemove=!0)})),this.updateEventListeners(e))}removeEventListeners(e){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(L.log(`removing "${e}" listeners...`),this.listeners[e]=[])}removeAllEventListeners(){L.log("removing listeners..."),this.listeners={}}dispatchEvent(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(this.listeners[e].forEach((s=>{s.shouldRemove||(L.log(`dispatching "${e}" listener`,s),s.listener({type:e,target:this.target,message:t}),s.once&&(L.log(`flagging "${e}" listener`,s),s.shouldRemove=!0))})),this.updateEventListeners(e))}waitForEvent(e){return new Promise((t=>{this.addEventListener(e,(e=>{t(e)}),{once:!0})}))}}var A,$,x;const T=S("Timer",{log:!1});class U{get callback(){return e(this,A,"f")}set callback(e){T.assertTypeWithError(e,"function"),T.log({newCallback:e}),t(this,A,e,"f"),this.isRunning&&this.restart()}get interval(){return e(this,$,"f")}set interval(e){T.assertTypeWithError(e,"number"),T.assertWithError(e>0,"interval must be above 0"),T.log({newInterval:e}),t(this,$,e,"f"),this.isRunning&&this.restart()}constructor(e,t){A.set(this,void 0),$.set(this,void 0),x.set(this,void 0),this.interval=t,this.callback=e}get isRunning(){return null!=e(this,x,"f")}start(s=!1){this.isRunning?T.log("interval already running"):(T.log("starting interval"),t(this,x,setInterval(e(this,A,"f"),e(this,$,"f")),"f"),s&&e(this,A,"f").call(this))}stop(){this.isRunning?(T.log("stopping interval"),clearInterval(e(this,x,"f")),t(this,x,void 0,"f")):T.log("interval already not running")}restart(e=!1){this.stop(),this.start(e)}}var O,B;A=new WeakMap,$=new WeakMap,x=new WeakMap,O="undefined"==typeof TextEncoder?class{encode(e){const t=Array.from(e).map((e=>e.charCodeAt(0)));return Uint8Array.from(t)}}:TextEncoder,B="undefined"==typeof TextDecoder?class{decode(e){return Array.from(new Uint8Array(e)).map((e=>String.fromCharCode(e))).join("")}}:TextDecoder;const N=new O,j=new B;var F,G,V,_,P;const z=S("DeviceInformationManager",{log:!0}),J=["manufacturerName","modelNumber","softwareRevision","hardwareRevision","firmwareRevision","pnpId","serialNumber"],K=[...J,"deviceInformation"];class X{constructor(){F.add(this),V.set(this,{})}get information(){return e(this,V,"f")}clear(){t(this,V,{},"f")}parseMessage(t,s){switch(z.log({messageType:t}),t){case"manufacturerName":const i=j.decode(s.buffer);z.log({manufacturerName:i}),e(this,F,"m",P).call(this,{manufacturerName:i});break;case"modelNumber":const n=j.decode(s.buffer);z.log({modelNumber:n}),e(this,F,"m",P).call(this,{modelNumber:n});break;case"softwareRevision":const r=j.decode(s.buffer);z.log({softwareRevision:r}),e(this,F,"m",P).call(this,{softwareRevision:r});break;case"hardwareRevision":const a=j.decode(s.buffer);z.log({hardwareRevision:a}),e(this,F,"m",P).call(this,{hardwareRevision:a});break;case"firmwareRevision":const o=j.decode(s.buffer);z.log({firmwareRevision:o}),e(this,F,"m",P).call(this,{firmwareRevision:o});break;case"pnpId":const c={source:1===s.getUint8(0)?"Bluetooth":"USB",productId:s.getUint16(3,!0),productVersion:s.getUint16(5,!0),vendorId:0};"Bluetooth"==c.source&&(c.vendorId=s.getUint16(1,!0)),z.log({pnpId:c}),e(this,F,"m",P).call(this,{pnpId:c});break;case"serialNumber":const h=j.decode(s.buffer);z.log({serialNumber:h});break;default:throw Error(`uncaught messageType ${t}`)}}}V=new WeakMap,F=new WeakSet,G=function(){return this.eventDispatcher.dispatchEvent},_=function(){return J.every((t=>{switch(t){case"modelNumber":case"serialNumber":return!0;default:return t in e(this,V,"f")}}))},P=function(t){z.log({partialDeviceInformation:t});Object.keys(t).forEach((s=>{e(this,F,"a",G).call(this,s,{[s]:t[s]})})),Object.assign(e(this,V,"f"),t),z.log({deviceInformation:e(this,V,"f")}),e(this,F,"a",_)&&(z.log("completed deviceInformation"),e(this,F,"a",G).call(this,"deviceInformation",{deviceInformation:this.information}))};function q(e,{include:t,exclude:s}={}){const i=e=>{const i=t=>"string"==typeof t?e===t:t.test(e);return t?t.some(i):!s||!s.some(i)};for(const[t,s]of(e=>{const t=new Set;do{for(const s of Reflect.ownKeys(e))t.add([e,s])}while((e=Reflect.getPrototypeOf(e))&&e!==Object.prototype);return t})(e.constructor.prototype)){if("constructor"===s||!i(s))continue;const n=Reflect.getOwnPropertyDescriptor(t,s);n&&"function"==typeof n.value&&(e[s]=e[s].bind(e))}return e}var H;const Q=S("TapDataManager"),Y=["tapData"],Z=[...Y];class ee{constructor(){H.add(this),q(this)}parseMessage(e,t){if(Q.log({messageType:e}),"tapData"!==e)throw Error(`uncaught messageType ${e}`)}}var te;H=new WeakSet;const se=S("MouseDataManager"),ie=["mouseData"],ne=[...ie];class re{constructor(){te.add(this),q(this)}parseMessage(e,t){if(se.log({messageType:e}),"mouseData"!==e)throw Error(`uncaught messageType ${e}`)}}var ae;te=new WeakSet;const oe=S("AirGestureManager"),ce=["airGesture"],he=[...ce];class le{constructor(){ae.add(this),q(this)}parseMessage(e,t){if(oe.log({messageType:e}),"airGesture"!==e)throw Error(`uncaught messageType ${e}`)}}ae=new WeakSet;const ue=S("RawSensorUtils"),de=["deviceAccelerometer","imuGyroscope","imuAccelerometer"],fe={deviceAccelerometer:[31.25,3.90625,7.8125,15.625,31.25],imuGyroscope:[17.5,4.375,8.75,17.5,35,70],imuAccelerometer:[.122,.061,.122,.244,.488]},ge={deviceAccelerometer:0,imuGyroscope:0,imuAccelerometer:0},ve={imu:12,device:30};function me(e,t){const s=fe[e][t];ue.assertWithError(null!=s,`invalid RawSensorSensitivity index ${t} for sensor "${e}" (got value ${s})`)}const pe=S("ArrayBufferUtils",{log:!1});function we(...e){const t=(e=(e=(e=e.filter((e=>null!=e||null!=e))).map((e=>{if("number"==typeof e){const t=e;return Uint8Array.from([Math.floor(t)])}if("boolean"==typeof e){const t=e;return Uint8Array.from([t?1:0])}if("string"==typeof e){return be(e)}if(e instanceof Array){return we(...e)}if(e instanceof ArrayBuffer)return e;if("buffer"in e&&e.buffer instanceof ArrayBuffer){return e.buffer}if(e instanceof DataView){return e.buffer}if("object"==typeof e){return function(e){return be(JSON.stringify(e))}(e)}return e}))).filter((e=>e&&"byteLength"in e))).reduce(((e,t)=>e+t.byteLength),0),s=new Uint8Array(t);let i=0;return e.forEach((e=>{s.set(new Uint8Array(e),i),i+=e.byteLength})),s.buffer}function be(e){const t=N.encode(e);return we(t.byteLength,t)}function ye(e,t,s){let i;return null!=s&&(i=e.byteOffset+t+s),pe.log({dataView:e,begin:t,end:i,length:s}),new DataView(e.buffer.slice(e.byteOffset+t,i))}var Ee,De,Me,Ce;const We=S("RawSensorManager"),Se=["rawSensor"],ke=[...Se,"imu","device"];class Re{constructor(){Ee.add(this),q(this)}parseMessage(t,s){if(We.log({messageType:t}),"rawSensor"!==t)throw Error(`uncaught messageType ${t}`);e(this,Ee,"m",Me).call(this,s)}}var Le,Ie,Ae;Ee=new WeakSet,De=function(){return this.eventDispatcher.dispatchEvent},Me=function(t){We.log("parsing whole",t);let s=0;for(;s+4<t.byteLength;){const i=t.getUint32(0,!0);s+=4,We.log({rawValue:i});const n=(2147483648&i)>>31,r=2147483647&i;if(We.log({firstBit:n,timestamp:r}),0==r)break;const a=0==n?"imu":"device";We.log({sensorDataType:a});const o=ve[a];if(We.log({sensorDataLength:o}),0==o)break;const c=ye(t,s,o);c.byteLength==o&&e(this,Ee,"m",Ce).call(this,a,r,c),s+=o}},Ce=function(t,s,i){We.log(`parsing ${t} ${s}ms`,i);let n="device"==t?"deviceAccelerometer":"imuGyroscope";const r=[];for(let e=0;e<i.byteLength;e+=6){const s=this.sensitivity[n],a=fe[n][s],[o,c,h]=[i.getInt16(e+0,!0),i.getInt16(e+2,!0),i.getInt16(e+4,!0)].map((e=>e*a));We.log({x:o,y:c,z:h});const l={x:o,y:c,z:h};We.log("point",l),r.push(l),"imu"==t&&(n="imuAccelerometer")}let a=0;switch(t){case"imu":a=2;break;case"device":a=5}r.length==a?(e(this,Ee,"a",De).call(this,t,{sensorDataType:t,points:r,timestamp:s}),e(this,Ee,"a",De).call(this,"rawSensor",{sensorDataType:t,points:r,timestamp:s})):We.log(`invalid number of ${t} points (expected ${a}, get ${r.length})`)};const $e=S("TxManager"),xe=["tx",...Se],Te=[...ke];class Ue{get eventDispatcher(){return e(this,Ie,"f")}set eventDispatcher(s){t(this,Ie,s,"f"),e(this,Ae,"f").eventDispatcher=s}set rawSensorSensitivity(t){e(this,Ae,"f").sensitivity=t}constructor(){Le.add(this),Ie.set(this,void 0),Ae.set(this,new Re),q(this)}parseMessage(t,s){if($e.log({messageType:t}),"tx"!==t)throw Error(`uncaught messageType ${t}`);e(this,Ae,"f").parseMessage("rawSensor",s)}}var Oe,Be,Ne,je,Fe,Ge,Ve,_e,Pe;Ie=new WeakMap,Ae=new WeakMap,Le=new WeakSet;const ze=S("BaseConnectionManager",{log:!0}),Je=["notConnected","connecting","connected","disconnecting"],Ke=[...Je,"connectionStatus","isConnected"];class Xe{get baseConstructor(){return this.constructor}static get isSupported(){return!1}get isSupported(){return this.baseConstructor.isSupported}get type(){return this.baseConstructor.type}constructor(){Oe.add(this),Ne.set(this,"notConnected"),_e.set(this,new U(e(this,Oe,"m",Pe).bind(this),5e3)),e(this,Oe,"m",Be).call(this)}get status(){return e(this,Ne,"f")}set status(s){ze.assertEnumWithError(s,Je),e(this,Ne,"f")!=s?(ze.log(`new connection status "${s}"`),t(this,Ne,s,"f"),this.onStatusUpdated(this.status),this.isConnected?e(this,_e,"f").start():e(this,_e,"f").stop()):ze.log(`tried to assign same connection status "${s}"`)}get isConnected(){return"connected"==this.status}async connect(){e(this,Oe,"m",je).call(this),e(this,Oe,"m",Fe).call(this),this.status="connecting"}get canReconnect(){return!1}async reconnect(){e(this,Oe,"m",je).call(this),e(this,Oe,"m",Fe).call(this),ze.assert(this.canReconnect,"unable to reconnect")}async disconnect(){e(this,Oe,"m",Ge).call(this),e(this,Oe,"m",Ve).call(this),this.status="disconnecting",ze.log("disconnecting from device...")}async sendUICommandsData(e){ze.log("sendUICommandsData",e)}async sendRxData(e){ze.log("sendRxData",e)}}Ne=new WeakMap,_e=new WeakMap,Oe=new WeakSet,Be=function(){ze.assertWithError(this.isSupported,`${this.constructor.name} is not supported`)},je=function(){ze.assertWithError(!this.isConnected,"device is already connected")},Fe=function(){ze.assertWithError("connecting"!=this.status,"device is already connecting")},Ge=function(){ze.assertWithError(this.isConnected,"device is not connected")},Ve=function(){ze.assertWithError("disconnecting"!=this.status,"device is already disconnecting")},Pe=function(){this.isConnected||(ze.log("timer detected disconnection"),this.status="notConnected")};const qe=S("EventUtils",{log:!1});function He(e,t){let s=e.addEventListener||e.addListener||e.on||e.AddEventListener;qe.assertWithError(s,"no add listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}function Qe(e,t){let s=e.removeEventListener||e.removeListener||e.RemoveEventListener;qe.assertWithError(s,"no remove listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}const Ye=S("bluetoothUUIDs",{log:!1});if(i)var Ze=window.BluetoothUUID;function et(e){return Ye.assertTypeWithError(e,"string"),Ye.assertWithError(1==e.length,"value must be 1 character long"),`C3FF000${e}-1D8B-40FD-A56F-C7BD5D0F3370`.toLowerCase()}function tt(e){return Ye.assertTypeWithError(e,"string"),Ye.assertWithError(1==e.length,"value must be 1 character long"),`6E40000${e}-B5A3-F393-E0A9-E50E24DCCA9E`.toLowerCase()}function st(e){return Ze?.getCharacteristic?.(e)}function it(e){return Ze?.getService?.(e)}const nt=Object.freeze({services:{deviceInformation:{uuid:it("device_information"),characteristics:{manufacturerName:{uuid:st("manufacturer_name_string")},modelNumber:{uuid:st("model_number_string")},hardwareRevision:{uuid:st("hardware_revision_string")},firmwareRevision:{uuid:st("firmware_revision_string")},softwareRevision:{uuid:st("software_revision_string")},pnpId:{uuid:st("pnp_id")},serialNumber:{uuid:st("serial_number_string")}}},battery:{uuid:it("battery_service"),characteristics:{batteryLevel:{uuid:st("battery_level")}}},tap:{uuid:et("1"),characteristics:{tapData:{uuid:et("5")},mouseData:{uuid:et("6")},airGesture:{uuid:et("A")},uiCommands:{uuid:et("9")},settings:{uuid:et("2")},unknown3:{uuid:et("3")},unknown7:{uuid:et("7")},unknown8:{uuid:et("8")},unknownB:{uuid:et("B")},unknownC:{uuid:et("C")},unknownD:{uuid:et("D")}}},nus:{uuid:tt("1"),characteristics:{rx:{uuid:tt("2")},tx:{uuid:tt("3")}}}}}),rt=[nt.services.tap.uuid],at=[nt.services.deviceInformation.uuid,nt.services.battery.uuid,nt.services.nus.uuid];function ot(e){e=e.toString().toLowerCase();return Object.keys(nt.services).find((t=>{let s=nt.services[t].uuid.toString();return 4==e.length&&(s=s.slice(4,8)),e.includes("-")||(s=s.replaceAll("-","")),e==s}))}const ct=[],ht=[];function lt(e){var t;return e=e.toString().toLowerCase(),Object.values(nt.services).some((s=>{const i=Object.keys(s.characteristics);return t=i.find((t=>{let i=s.characteristics[t].uuid.toString();return 4==e.length&&(i=i.slice(4,8)),e.includes("-")||(i=i.replaceAll("-","")),e==i}))})),t}function ut(e){const t={broadcast:!1,read:!0,writeWithoutResponse:!1,write:!1,notify:!1,indicate:!1,authenticatedSignedWrites:!1,reliableWrite:!1,writableAuxiliaries:!1};switch(e){case"settings":case"tapData":case"mouseData":case"unknown7":case"unknown8":t.read=!1}switch(e){case"batteryLevel":case"tapData":case"mouseData":case"airGesture":case"unknown8":case"unknownB":case"unknownC":case"unknownD":case"tx":t.notify=!0}switch(e){case"airGesture":case"uiCommands":case"unknown7":case"unknownB":t.writeWithoutResponse=!0}switch(e){case"settings":case"unknown3":case"unknown7":case"rx":t.write=!0}return t}Object.values(nt.services).forEach((e=>{if(!e.characteristics)return;const t=Object.keys(e.characteristics);t.forEach((s=>{const i=e.characteristics[s];rt.includes(e.uuid)&&(ct.push(i.uuid),t.push(s)),ht.push(i.uuid)}))}),[]),Ye.log({serviceUUIDs:rt,optionalServiceUUIDs:at,characteristicUUIDs:ct,allCharacteristicUUIDs:ht});const dt=S("BluetoothConnectionManager",{log:!0});class ft extends Xe{constructor(){super(...arguments),this.isInRange=!0}onCharacteristicValueChanged(e,t){switch(e){case"batteryLevel":case"firmwareRevision":case"hardwareRevision":case"manufacturerName":case"modelNumber":case"pnpId":case"serialNumber":case"softwareRevision":case"tapData":case"mouseData":case"airGesture":case"tx":this.onMessageReceived?.(e,t)}}async writeCharacteristic(e,t){dt.log("writeCharacteristic",...arguments)}async sendUICommandsData(e){super.sendUICommandsData(e),await this.writeCharacteristic("uiCommands",e)}async sendRxData(e){super.sendRxData(e),await this.writeCharacteristic("rx",e)}}var gt,vt,mt,pt,wt,bt,yt,Et,Dt,Mt,Ct;const Wt=S("WebBluetoothConnectionManager",{log:!0});var St,kt,Rt;i&&(St=window.navigator.bluetooth);class Lt extends ft{constructor(){super(...arguments),gt.add(this),vt.set(this,{characteristicvaluechanged:e(this,gt,"m",Dt).bind(this)}),mt.set(this,{gattserverdisconnected:e(this,gt,"m",Ct).bind(this)}),pt.set(this,void 0),wt.set(this,new Map),bt.set(this,new Map)}get bluetoothId(){return this.device?.id||""}get name(){return this.device?.name||""}static get isSupported(){return Boolean(St)}static get type(){return"webBluetooth"}get device(){return e(this,pt,"f")}set device(s){e(this,pt,"f")!=s?(e(this,pt,"f")&&Qe(e(this,pt,"f"),e(this,mt,"f")),s&&He(s,e(this,mt,"f")),t(this,pt,s,"f")):Wt.log("tried to assign the same BluetoothDevice")}get server(){return e(this,pt,"f")?.gatt}get isConnected(){return this.server?.connected||!1}async connect(){await super.connect();try{const t=await St.requestDevice({filters:[{services:rt}],optionalServices:i?at:[]});Wt.log("got BluetoothDevice"),this.device=t,Wt.log("connecting to device...");const s=await this.server.connect();Wt.log(`connected to device? ${s.connected}`),await e(this,gt,"m",yt).call(this),Wt.log("fully connected"),this.status="connected"}catch(t){Wt.error(t),this.status="notConnected",this.server?.disconnect(),e(this,gt,"m",Et).call(this)}}async disconnect(){await e(this,gt,"m",Et).call(this),await super.disconnect(),this.server?.disconnect(),this.status="notConnected"}async writeCharacteristic(t,s){super.writeCharacteristic(t,s);const i=e(this,bt,"f").get(t);Wt.assertWithError(i,`${t} characteristic not found`),Wt.log("writing characteristic",i,s);const n=i.properties||ut(t);n.writeWithoutResponse?(Wt.log("writing without response"),await i.writeValueWithoutResponse(s)):(Wt.log("writing with response"),await i.writeValueWithResponse(s)),Wt.log("wrote characteristic"),n.read&&!n.notify&&(Wt.log("reading value after write..."),await i.readValue(),(o||c)&&e(this,gt,"m",Mt).call(this,i))}get canReconnect(){return Boolean(this.server&&!this.server.connected&&this.isInRange)}async reconnect(){await super.reconnect(),Wt.log("attempting to reconnect..."),this.status="connecting";try{await this.server.connect()}catch(e){Wt.error(e),this.isInRange=!1}this.isConnected?(Wt.log("successfully reconnected!"),await e(this,gt,"m",yt).call(this),this.status="connected"):(Wt.log("unable to reconnect"),this.status="notConnected")}}function It(e,t=0,s=1){return Math.max(t,Math.min(s,e))}vt=new WeakMap,mt=new WeakMap,pt=new WeakMap,wt=new WeakMap,bt=new WeakMap,gt=new WeakSet,yt=async function(){e(this,gt,"m",Et).call(this),Wt.log("getting services...");const t=await this.server.getPrimaryServices();Wt.log("got services",t);const s=await this.server.getPrimaryService("6e400001-b5a3-f393-e0a9-e50e24dcca9e");Wt.log("got nus service",s),Wt.log("getting characteristics...");for(const s in t){const i=t[s];Wt.log({service:i});const n=ot(i.uuid);Wt.assertWithError(n,`no name found for service uuid "${i.uuid}"`),Wt.log(`got "${n}" service`),i.name=n,e(this,wt,"f").set(n,i),Wt.log(`getting characteristics for "${n}" service`);const r=await i.getCharacteristics();Wt.log(`got characteristics for "${n}" service`);for(const t in r){const s=r[t];Wt.log({characteristic:s});const i=lt(s.uuid);Wt.assertWithError(Boolean(i),`no name found for characteristic uuid "${s.uuid}" in "${n}" service`),Wt.log(`got "${i}" characteristic in "${n}" service`),s.name=i,e(this,bt,"f").set(i,s),He(s,e(this,vt,"f"));const a=s.properties||ut(i);a.notify&&(Wt.log(`starting notifications for "${i}" characteristic`),await s.startNotifications()),a.read&&(Wt.log(`reading "${i}" characteristic...`),await s.readValue(),(o||c)&&e(this,gt,"m",Mt).call(this,s))}}},Et=async function(){this.device&&Qe(this.device,e(this,mt,"f"));const t=Array.from(e(this,bt,"f").keys()).map((t=>{const s=e(this,bt,"f").get(t);Qe(s,e(this,vt,"f"));if((s.properties||ut(t)).notify)return Wt.log(`stopping notifications for "${t}" characteristic`),s.stopNotifications()}));return Promise.allSettled(t)},Dt=function(t){Wt.log("oncharacteristicvaluechanged");const s=t.target;e(this,gt,"m",Mt).call(this,s)},Mt=function(e){Wt.log("onCharacteristicValue");const t=e.name;Wt.assertWithError(Boolean(t),`no name found for characteristic with uuid "${e.uuid}"`),Wt.log(`oncharacteristicvaluechanged for "${t}" characteristic`);const s=e.value;Wt.assertWithError(s,`no data found for "${t}" characteristic`),Wt.log(`data for "${t}" characteristic`,Array.from(new Uint8Array(s.buffer)));try{this.onCharacteristicValueChanged(t,s)}catch(e){Wt.error(e)}},Ct=function(){Wt.log("gattserverdisconnected"),this.status="notConnected"},S("MathUtils",{log:!0});const At=S("VibrationManager"),$t=9,xt=18;class Tt{constructor(){kt.add(this),q(this)}async vibrate(t){At.log("triggering vibration segments",t);const s=e(this,kt,"m",Rt).call(this,t);await this.sendUICommandsData(s?.buffer)}}var Ut,Ot,Bt,Nt,jt,Ft,Gt,Vt,_t,Pt,zt,Jt,Kt,Xt,qt,Ht;kt=new WeakSet,Rt=function(e){const t=new DataView(new ArrayBuffer(20));let s=0;t.setUint8(s++,0),t.setUint8(s++,2);for(let s=0;s<e.length&&s<18;s++){let i=e[s];i/=10,i=It(i,0,255),At.log(`vibration segment #${s}: ${i}`),t.setUint8(2+s,i)}return t};const Qt=S("DeviceManager",{log:!0}),Yt=["deviceConnected","deviceDisconnected","deviceIsConnected","availableDevices","connectedDevices"];class Zt{constructor(){if(Ut.add(this),Ot.set(this,{isConnected:e(this,Ut,"m",Xt).bind(this)}),Bt.set(this,[]),Nt.set(this,!1),jt.set(this,{devices:[]}),Ft.set(this,void 0),Vt.set(this,"TS.Device"),zt.set(this,[]),Jt.set(this,new I(this,Yt)),Zt.shared&&this!=Zt.shared)throw Error("DeviceManager is a singleton - use DeviceManager.shared");this.CanUseLocalStorage&&(this.UseLocalStorage=!0)}onDevice(t){He(t,e(this,Ot,"f"))}OnDeviceConnectionStatusUpdated(t,s){if("notConnected"==s&&!t.canReconnect&&e(this,zt,"f").includes(t)){const s=e(this,zt,"f").indexOf(t);this.AvailableDevices.splice(s,1),e(this,Ut,"m",qt).call(this)}}get ConnectedDevices(){return e(this,Bt,"f")}get UseLocalStorage(){return e(this,Nt,"f")}set UseLocalStorage(s){e(this,Ut,"m",Gt).call(this),Qt.assertTypeWithError(s,"boolean"),t(this,Nt,s,"f"),e(this,Nt,"f")&&!e(this,Ft,"f")&&e(this,Ut,"m",Pt).call(this)}get CanUseLocalStorage(){return i&&window.localStorage}get AvailableDevices(){return e(this,zt,"f")}get CanGetDevices(){return i&&navigator.bluetooth?.getDevices}async GetDevices(){if(!i)return void Qt.warn("GetDevices is only available in the browser");if(!navigator.bluetooth)return void Qt.warn("bluetooth is not available in this browser");if(o)return void Qt.warn("bluefy lists too many devices...");if(!navigator.bluetooth.getDevices)return void Qt.warn("bluetooth.getDevices() is not available in this browser");if(!this.CanGetDevices)return void Qt.log("CanGetDevices is false");e(this,Ft,"f")||e(this,Ut,"m",Pt).call(this);const t=e(this,Ft,"f");if(!t.devices||0==t.devices.length)return void Qt.log("no devices found in configuration");const s=await navigator.bluetooth.getDevices();return Qt.log({bluetoothDevices:s}),s.forEach((s=>{if(!s.gatt)return;if(!t.devices.find((e=>s.id==e.bluetoothId)))return;let i=this.ConnectedDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));const n=this.AvailableDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));if(n)return void(i&&i?.bluetoothId==n.bluetoothId&&i!=n&&(this.AvailableDevices[e(this,zt,"f").indexOf(n)]=i));if(i)return void this.AvailableDevices.push(i);const r=new ti,a=new Lt;a.device=s,s.name,r.connectionManager=a,this.AvailableDevices.push(r)})),e(this,Ut,"m",qt).call(this),this.AvailableDevices}get AddEventListener(){return e(this,Jt,"f").addEventListener}get RemoveEventListener(){return e(this,Jt,"f").removeEventListener}get RemoveEventListeners(){return e(this,Jt,"f").removeEventListeners}get RemoveAllEventListeners(){return e(this,Jt,"f").removeAllEventListeners}}Ot=new WeakMap,Bt=new WeakMap,Nt=new WeakMap,jt=new WeakMap,Ft=new WeakMap,Vt=new WeakMap,zt=new WeakMap,Jt=new WeakMap,Ut=new WeakSet,Gt=function(){Qt.assertWithError(i,"localStorage is only available in the browser"),Qt.assertWithError(window.localStorage,"localStorage not found")},_t=function(){e(this,Ut,"m",Gt).call(this),localStorage.setItem(e(this,Vt,"f"),JSON.stringify(e(this,Ft,"f")))},Pt=async function(){e(this,Ut,"m",Gt).call(this);let s=localStorage.getItem(e(this,Vt,"f"));if("string"!=typeof s)return Qt.log("no info found in localStorage"),t(this,Ft,Object.assign({},e(this,jt,"f")),"f"),void e(this,Ut,"m",_t).call(this);try{const e=JSON.parse(s);Qt.log({configuration:e}),t(this,Ft,e,"f"),this.CanGetDevices&&await this.GetDevices()}catch(e){Qt.error(e)}},Kt=function(){return e(this,Jt,"f").dispatchEvent},Xt=function(t){const{target:s}=t;if(s.isConnected)if(e(this,Bt,"f").includes(s))Qt.log("device already included");else{if(Qt.log("adding device",s),e(this,Bt,"f").push(s),this.UseLocalStorage&&"webBluetooth"==s.connectionType){const t={bluetoothId:s.bluetoothId},i=e(this,Ft,"f").devices.findIndex((e=>e.bluetoothId==t.bluetoothId));-1==i?e(this,Ft,"f").devices.push(t):e(this,Ft,"f").devices[i]=t,e(this,Ut,"m",_t).call(this)}e(this,Ut,"a",Kt).call(this,"deviceConnected",{device:s}),e(this,Ut,"a",Kt).call(this,"deviceIsConnected",{device:s}),e(this,Ut,"m",Ht).call(this)}else e(this,Bt,"f").includes(s)?(Qt.log("removing device",s),e(this,Bt,"f").splice(e(this,Bt,"f").indexOf(s),1),e(this,Ut,"a",Kt).call(this,"deviceDisconnected",{device:s}),e(this,Ut,"a",Kt).call(this,"deviceIsConnected",{device:s}),e(this,Ut,"m",Ht).call(this)):Qt.log("device already not included");if(this.CanGetDevices&&this.GetDevices(),s.isConnected&&!this.AvailableDevices.includes(s)){const t=this.AvailableDevices.find((e=>e.bluetoothId==s.bluetoothId));Qt.log({existingAvailableDevice:t}),t?this.AvailableDevices[this.AvailableDevices.indexOf(t)]=s:this.AvailableDevices.push(s),e(this,Ut,"m",qt).call(this)}},qt=function(){Qt.log({AvailableDevices:this.AvailableDevices}),e(this,Ut,"a",Kt).call(this,"availableDevices",{availableDevices:this.AvailableDevices})},Ht=function(){Qt.log({ConnectedDevices:this.ConnectedDevices}),e(this,Ut,"a",Kt).call(this,"connectedDevices",{connectedDevices:this.ConnectedDevices})},Zt.shared=new Zt;var es,ts,ss,is,ns,rs,as,os=Zt.shared;const cs=S("InputManager"),hs=["controller","text","rawSensor","controllerWithMouse","controllerWithMouseAndKeyboard"],ls={controller:1,text:0,rawSensor:10,controllerWithMouse:3,controllerWithMouseAndKeyboard:5};class us{constructor(){es.add(this),ts.set(this,Object.assign({},ge)),ss.set(this,"controller"),rs.set(this,new U(e(this,es,"m",as).bind(this),1e4)),q(this)}get sensitivity(){return e(this,ts,"f")}set sensitivity(t){Object.assign(e(this,ts,"f"),t)}setSensitivityForType(t,s){me(t,s),cs.log(`setting ${t} sensitivity index to ${s}`),e(this,ts,"f")[t]=s}get mode(){return e(this,ss,"f")}set mode(s){e(this,es,"m",is).call(this,s),this.mode!=s?(t(this,ss,s,"f"),e(this,rs,"f").isRunning&&e(this,rs,"f").restart(!0)):cs.log(`redundant mode assignment "${s}"`)}setMode(e){this.mode=e}start(){e(this,rs,"f").start(!0)}stop(){e(this,rs,"f").stop()}}var ds,fs,gs,vs,ms,ps;ts=new WeakMap,ss=new WeakMap,rs=new WeakMap,es=new WeakSet,is=function(e){cs.assertEnumWithError(e,hs)},ns=function(){const e=ls[this.mode];let t=[];var s;"rawSensor"==this.mode&&(cs.assertWithError(this.sensitivity,"no sensitivity defined for rawSensor input mode"),s=this.sensitivity,de.forEach((e=>{me(e,s[e])})),de.forEach((e=>{t.push(this.sensitivity[e])})));return we(3,12,0,e,t)},as=function(){cs.log("sending mode data...");const t=e(this,es,"m",ns).call(this);this.sendRxData(t)};const ws=S("XRStateManager"),bs=["user","airMouse","tapping","dontSend"],ys={user:3,airMouse:1,tapping:2};class Es{constructor(){ds.add(this),fs.set(this,"user"),ms.set(this,new U(e(this,ds,"m",ps).bind(this),1e4)),q(this)}get state(){return e(this,fs,"f")}set state(s){e(this,ds,"m",gs).call(this,s),this.state!=s?(t(this,fs,s,"f"),e(this,ms,"f").isRunning&&e(this,ms,"f").restart(!0)):ws.log(`redundant state assignment "${s}"`)}setState(e){this.state=e}start(){e(this,ms,"f").start(!0)}stop(){e(this,ms,"f").stop()}}var Ds,Ms,Cs,Ws,Ss,ks,Rs,Ls,Is,As,$s,xs,Ts,Us,Os,Bs,Ns,js,Fs,Gs,Vs,_s,Ps,zs,Js,Ks,Xs,qs,Hs,Qs,Ys;fs=new WeakMap,ms=new WeakMap,ds=new WeakSet,gs=function(e){ws.assertEnumWithError(e,bs)},vs=function(){const e=ys[this.state];ws.assert(null!=e,`no stateByte found for state "${this.state}"`);return we(3,13,0,e)},ps=function(){if("dontSend"==this.state)return;ws.log("sending state data...");const t=e(this,ds,"m",vs).call(this);this.sendRxData(t)};const Zs=S("Device",{log:!0}),ei=["connectionMessage",...Ke,"batteryLevel",...K,...Z,...ne,...he,...Te];class ti{get bluetoothId(){return e(this,ks,"f")?.bluetoothId}get name(){return e(this,ks,"f")?.name}constructor(){Ds.add(this),Ws.set(this,new I(this,ei)),ks.set(this,void 0),this.sendUICommandsData=e(this,Ds,"m",Rs).bind(this),this.sendRxData=e(this,Ds,"m",Ls).bind(this),Is.set(this,!1),Ts.set(this,Ms.ReconnectOnDisconnection),Us.set(this,void 0),this.latestConnectionMessage=new Map,Vs.set(this,new X),_s.set(this,0),zs.set(this,new us),Js.set(this,new Es),Ks.set(this,new ee),Xs.set(this,new re),qs.set(this,new le),Hs.set(this,new Ue),Qs.set(this,new Tt),Ys.set(this,!1),e(this,Vs,"f").eventDispatcher=e(this,Ws,"f"),e(this,zs,"f").sendRxData=this.sendRxData,e(this,Js,"f").sendRxData=this.sendRxData,e(this,Ks,"f").eventDispatcher=e(this,Ws,"f"),e(this,Xs,"f").eventDispatcher=e(this,Ws,"f"),e(this,qs,"f").eventDispatcher=e(this,Ws,"f"),e(this,Hs,"f").eventDispatcher=e(this,Ws,"f"),e(this,Qs,"f").sendUICommandsData=this.sendUICommandsData,e(this,Hs,"f").rawSensorSensitivity=e(this,zs,"f").sensitivity,this.addEventListener("hardwareRevision",(()=>{})),this.addEventListener("isConnected",(()=>{this.isConnected?e(this,zs,"f").start():e(this,zs,"f").stop()})),os.onDevice(this),i&&window.addEventListener("beforeunload",(()=>{this.isConnected})),n&&process.on("exit",(()=>{this.isConnected}))}get addEventListener(){return e(this,Ws,"f").addEventListener}get removeEventListener(){return e(this,Ws,"f").removeEventListener}get waitForEvent(){return e(this,Ws,"f").waitForEvent}get removeEventListeners(){return e(this,Ws,"f").removeEventListeners}get removeAllEventListeners(){return e(this,Ws,"f").removeAllEventListeners}get connectionManager(){return e(this,ks,"f")}set connectionManager(s){this.connectionManager!=s?(this.connectionManager&&(this.connectionManager.onStatusUpdated=void 0,this.connectionManager.onMessageReceived=void 0,this.connectionManager.onMessagesReceived=void 0),s&&(s.onStatusUpdated=e(this,Ds,"m",Os).bind(this),s.onMessageReceived=e(this,Ds,"m",Fs).bind(this),s.onMessagesReceived=e(this,Ds,"m",Gs).bind(this)),t(this,ks,s,"f"),Zs.log("assigned new connectionManager",e(this,ks,"f"))):Zs.log("same connectionManager is already assigned")}async connect(){return this.connectionManager||(this.connectionManager=e(Ms,Ms,"m",Cs).call(Ms)),e(this,Ds,"m",js).call(this),this.connectionManager.connect()}get isConnected(){return e(this,Is,"f")}get canReconnect(){return this.connectionManager?.canReconnect}async reconnect(){return e(this,Ds,"m",$s).call(this),e(this,Ds,"m",js).call(this),this.connectionManager?.reconnect()}static async Connect(){const e=new Ms;return await e.connect(),e}static get ReconnectOnDisconnection(){return e(this,Ms,"f",xs)}static set ReconnectOnDisconnection(e){Zs.assertTypeWithError(e,"boolean"),t(this,Ms,e,"f",xs)}get reconnectOnDisconnection(){return e(this,Ts,"f")}set reconnectOnDisconnection(e){Zs.assertTypeWithError(e,"boolean"),t(this,Ts,e,"f")}get connectionType(){return this.connectionManager?.type}async disconnect(){return e(this,Ds,"m",As).call(this),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.addEventListener("isConnected",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this.connectionManager.disconnect()}toggleConnection(){this.isConnected?this.disconnect():this.canReconnect?this.reconnect():this.connect()}get connectionStatus(){switch(e(this,ks,"f")?.status){case"connected":return this.isConnected?"connected":"connecting";case"notConnected":case"connecting":case"disconnecting":return e(this,ks,"f").status;default:return"notConnected"}}get isConnectionBusy(){return"connecting"==this.connectionStatus||"disconnecting"==this.connectionStatus}get deviceInformation(){return e(this,Vs,"f").information}get batteryLevel(){return e(this,_s,"f")}get setInputMode(){return e(this,zs,"f").setMode}get setSensitivityForType(){return e(this,zs,"f").setSensitivityForType}get setXRState(){return e(this,Js,"f").setState}get vibrate(){return e(this,Qs,"f").vibrate}get isServerSide(){return e(this,Ys,"f")}set isServerSide(s){e(this,Ys,"f")!=s?(Zs.log({newIsServerSide:s}),t(this,Ys,s,"f")):Zs.log("redundant isServerSide assignment")}}var si,ii,ni;Ms=ti,Ws=new WeakMap,ks=new WeakMap,Is=new WeakMap,Ts=new WeakMap,Us=new WeakMap,Vs=new WeakMap,_s=new WeakMap,zs=new WeakMap,Js=new WeakMap,Ks=new WeakMap,Xs=new WeakMap,qs=new WeakMap,Hs=new WeakMap,Qs=new WeakMap,Ys=new WeakMap,Ds=new WeakSet,Cs=function(){return new Lt},Ss=function(){return e(this,Ws,"f").dispatchEvent},Rs=async function(t){await(e(this,ks,"f")?.sendUICommandsData(t))},Ls=async function(t){await(e(this,ks,"f")?.sendRxData(t))},As=function(){Zs.assertWithError(this.isConnected,"notConnected")},$s=function(){Zs.assertWithError(this.canReconnect,"cannot reconnect to device")},Os=function(s){Zs.log({connectionStatus:s}),"notConnected"==s?this.canReconnect&&this.reconnectOnDisconnection&&(Zs.log("starting reconnect interval..."),t(this,Us,setInterval((()=>{Zs.log("attempting reconnect..."),this.reconnect()}),1e3),"f")):null!=e(this,Us,"f")&&(Zs.log("clearing reconnect interval"),clearInterval(e(this,Us,"f")),t(this,Us,void 0,"f")),e(this,Ds,"m",Ns).call(this),"connected"==s&&e(this,Is,"f"),os.OnDeviceConnectionStatusUpdated(this,s)},Bs=function(t=!1){e(this,Ds,"a",Ss).call(this,"connectionStatus",{connectionStatus:this.connectionStatus}),e(this,Ds,"a",Ss).call(this,this.connectionStatus,{}),t&&e(this,Ds,"a",Ss).call(this,"isConnected",{isConnected:this.isConnected})},Ns=function(){switch(t(this,Is,Boolean(this.connectionManager?.isConnected),"f"),this.connectionStatus){case"connected":e(this,Is,"f")&&e(this,Ds,"m",Bs).call(this,!0);break;case"notConnected":e(this,Ds,"m",Bs).call(this,!0);break;default:e(this,Ds,"m",Bs).call(this,!1)}},js=function(){this.latestConnectionMessage.clear(),e(this,Vs,"f").clear()},Fs=function(t,s){if(Zs.log({messageType:t,dataView:s}),"batteryLevel"===t){const t=s.getUint8(0);Zs.log("received battery level",{batteryLevel:t}),e(this,Ds,"m",Ps).call(this,t)}else if(J.includes(t))e(this,Vs,"f").parseMessage(t,s);else if(Y.includes(t))e(this,Ks,"f").parseMessage(t,s);else if(ie.includes(t))e(this,Xs,"f").parseMessage(t,s);else if(ce.includes(t))e(this,qs,"f").parseMessage(t,s);else{if(!xe.includes(t))throw Error(`uncaught messageType "${t}"`);e(this,Hs,"f").parseMessage(t,s)}this.latestConnectionMessage.set(t,s),e(this,Ds,"a",Ss).call(this,"connectionMessage",{messageType:t,dataView:s})},Gs=function(){this.isConnected||e(this,Ds,"m",Ns).call(this)},Ps=function(s){Zs.assertTypeWithError(s,"number"),e(this,_s,"f")!=s?(t(this,_s,s,"f"),Zs.log({updatedBatteryLevel:e(this,_s,"f")}),e(this,Ds,"a",Ss).call(this,"batteryLevel",{batteryLevel:e(this,_s,"f")})):Zs.log(`duplicate batteryLevel assignment ${s}`)},xs={value:!1};const ri={min:1/0,max:-1/0,span:0};class ai{constructor(){si.add(this),ii.set(this,Object.assign({},ri))}get min(){return e(this,ii,"f").min}get max(){return e(this,ii,"f").max}set min(t){e(this,ii,"f").min=t,e(this,ii,"f").max=Math.max(t,e(this,ii,"f").max),e(this,si,"m",ni).call(this)}set max(t){e(this,ii,"f").max=t,e(this,ii,"f").min=Math.min(t,e(this,ii,"f").min),e(this,si,"m",ni).call(this)}reset(){Object.assign(e(this,ii,"f"),ri)}update(t){e(this,ii,"f").min=Math.min(t,e(this,ii,"f").min),e(this,ii,"f").max=Math.max(t,e(this,ii,"f").max),e(this,si,"m",ni).call(this)}getNormalization(t,s){let i=function(e,t,s,i){return null==i&&(i=s-t),(e-t)/i}(t,e(this,ii,"f").min,e(this,ii,"f").max,e(this,ii,"f").span);return s&&(i*=e(this,ii,"f").span),i||0}updateAndGetNormalization(e,t){return this.update(e),this.getNormalization(e,t)}}ii=new WeakMap,si=new WeakSet,ni=function(){e(this,ii,"f").span=e(this,ii,"f").max-e(this,ii,"f").min};export{ti as Device,os as DeviceManager,w as Environment,hs as InputModes,xt as MaxNumberOfVibrationSegments,$t as MaxNumberOfVibrations,ai as RangeHelper,fe as RawSensorSensitivityFactors,de as RawSensorTypes,R as setAllConsoleLevelFlags,k as setConsoleLevelFlagsForType};
//# sourceMappingURL=tapstrap.module.min.js.map
